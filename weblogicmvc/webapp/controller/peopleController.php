<?php
use ArmoredCore\Controllers\BaseController;
use ArmoredCore\Interfaces\ResourceControllerInterface;
use ArmoredCore\WebObjects\Post;
use ArmoredCore\WebObjects\Redirect;
use ArmoredCore\WebObjects\View;

/**
 * CRUD Resource Controller for ActiveRecord Model people
 *
 * Code generated by WebLogicMVC Code Builder
 *
 * Date: 2021-06-11
 *
 * WL Code Builder developed by Sílvio Priem Mendes
 * *
 */
class peopleController extends BaseController implements ResourceControllerInterface
{
	/**
	 * Returns index view with all records
	 */
	public function index()
	{
		$peoples = people::all();
		return View::make('people.index', ['peoples' => $peoples]);
	}


	/**
	 * Returns a view with a form to create a new record
	 */
	public function create()
	{
		return View::make('project.registo');
	}


	/**
	 * Receives new record data through POST method and stores it in the DB table
	 */
	public function store()
	{
		//create new resource (activerecord/model) instance with data from POST
		//your form name fields must match the ones of the table fields
		$people = new people(Post::getAll());

		if($people->is_valid()){
		    $people->save();
		    Redirect::toRoute('home/login');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('people/create', ['people' => $people]);
		}
	}


	/**
	 * return a detailed view with record where PK = $id
	 */
	public function show($id)
	{
		$people = people::find([$id]);

		if (is_null($people)) {
		   //TODO redirect to standard error page
		} else {
		    return View::make('pessoa.perfil', ['people' => $people]);
		}
	}


	/**
	 * return a editable form view with record where PK = $id
	 */
	public function edit($id)
	{
		$people = people::find([$id]);

		if (is_null($people)) {
		   //TODO redirect to standard error page
		} else {
		    return View::make('people.edit', ['people' => $people]);
		}
	}


	/**
	 * Receives record data through POST method and updates it in the DB table
	 */
	public function update($id)
	{
		//find resource (activerecord/model) instance where PK = $id
		//your form name fields must match the ones of the table fields
		$people = people::find([$_SESSION["Id"]]);
		$people->update_attributes(Post::getAll());

		if($people->is_valid()){
		    $people->save();
		    Redirect::toRoute('pessoa/perfil');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('people/edit', ['people' => $people]);
		}
	}


	/**
	 * deletes the record where PK = $id
	 */
	public function destroy($id)
	{
		$people = people::find([$id]);
		$people->delete();
		Redirect::toRoute('pessoa/gestaopessoal');
	}

	public function login(){

		return View::Make('home/login');
	}

	public function verifylogin(){

		$username = Post::get("username");
		$password = Post::get("password");

		$pessoas = people::find_all_by_username([$username], array('select' => 'palavrapasse'));

		foreach ($pessoas as $pessoa) {
                if ($password == $pessoa->palavrapasse) {
                	$pessoas = people::find_all_by_username_and_palavrapasse([$username], [$password]);
                	foreach ($pessoas as $pessoa)
                	{
                		$_SESSION["Tipo"] = $pessoa->tipo;
                		$_SESSION["Nome"] = $pessoa->nome;
                		$_SESSION["Id"] = $pessoa->id;
                	}

                    Redirect::toRoute('home/index');
                }
            }

            
            View::Make('home/login');
        }

    public function perfil(){

    	$people = people::find([$_SESSION["Id"]]);
    	$tickets = ticket::find_all_by_people_id([$_SESSION["Id"]]);

    	$i = 0;
    	$allflights = array();
    	foreach($tickets as $ticket){
    		$ticketsflights = ticketsflight::find_all_by_ticket_id([$ticket->id]);

    		foreach($ticketsflights as $ticketsflight){
    			$allflights[$i] = $ticketsflight;
    			$i++;
    		}
    	}

    	View::Make('project.perfil', ['people' => $people, 'allflights' => $allflights]);
    }  

        public function sair(){
        session_destroy();
    	$_SESSION["Tipo"] = null;
    	$_SESSION["Nome"] = null;
    	$_SESSION["Id"] = null;
    	Redirect::toRoute('home/index');
    }

    public function gestao(){

    	$peoples = people::find('all', array('conditions' => array('tipo in (?)', array('G','O'))));

    	return View::Make('project.gestaopessoal', ['peoples' => $peoples]);

    }

    public function addpersonel(){
    	$people = new people(Post::getAll());

		if($people->is_valid()){
		    $people->save();
		    Redirect::toRoute('pessoa/gestaopessoal');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('people/create', ['people' => $people]);
		}
    }

    public function atualizar(){
    	$people = people::find([$_SESSION["Id"]]);
		$people->update_attributes(Post::getAll());

		if($people->is_valid()){
		    $people->save();
		    Redirect::toRoute('pessoa/perfil');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('people/edit', ['people' => $people]);
		}
    }
}

?>