<?php 
use ArmoredCore\Controllers\BaseController;
use ArmoredCore\Interfaces\ResourceControllerInterface;
use ArmoredCore\WebObjects\Post;
use ArmoredCore\WebObjects\Redirect;
use ArmoredCore\WebObjects\View;

/**
 * CRUD Resource Controller for ActiveRecord Model flight
 *
 * Code generated by WebLogicMVC Code Builder
 *
 * Date: 2021-06-11
 *
 * WL Code Builder developed by Sílvio Priem Mendes
 * *
 */
class flightController extends BaseController implements ResourceControllerInterface
{
	/**
	 * Returns index view with all records
	 */
	public function index()
	{

		$flights = flight::all();
		return View::make('flight.index', ['flights' => $flights]);
	}


	/**
	 * Returns a view with a form to create a new record
	 */
	public function create()
	{
		return View::make('flight.create');
	}


	/**
	 * Receives new record data through POST method and stores it in the DB table
	 */
	public function store()
	{
		//create new resource (activerecord/model) instance with data from POST
		//your form name fields must match the ones of the table fields
				$partida= array(
			'terminal' => Post::get("terminal"),
			'horarioPartida' => Post::get("horarioPartida"),
			'pista' => Post::get("pista"),
			'airport_id' => Post::get('airport_id')
		);

		$departure = new departure($partida);

		$departure->save();

		$lastdeparture = departure::last();

		$chegada= array(
			'terminal' => Post::get("terminalC"),
			'horarioChegada' => Post::get("horarioChegada"),
			'pista' => Post::get("pistaC"),
			'airport_id' => Post::get('airport_idC')
		);

		$arrive = new arrive($chegada);

		$arrive->save();

		$lastarrive = arrive::last();

		$voo = array(
			'nVoo' => Post::get("nVoo"),
			'distancia' => Post::get("distancia"),
			'comAerea' => Post::get("comAerea"),
			'departure_id' => $lastdeparture->id,
			'arrive_id' => $lastarrive->id,
			'airplane_id' => Post::get("airplane_id")
			);

		$flight= new flight($voo);

		if($flight->is_valid()){
		    $flight->save();
		    Redirect::toRoute('flight/index');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('flight/create', ['flight' => $flight]);
		}
	}


	/**
	 * return a detailed view with record where PK = $id
	 */
	public function show($id)
	{
		$flight = flight::find([$id]);

		if (is_null($flight)) {
		   //TODO redirect to standard error page
		} else {
		    return View::make('flight.show', ['flight' => $flight]);
		}
	}


	/**
	 * return a editable form view with record where PK = $id
	 */
	public function edit($id)
	{
		$flight = flight::find([$id]);

		if (is_null($flight)) {
		   //TODO redirect to standard error page
		} else {
		    return View::make('flight.edit', ['flight' => $flight]);
		}
	}


	/**
	 * Receives record data through POST method and updates it in the DB table
	 */
	public function update($id)
	{
		//find resource (activerecord/model) instance where PK = $id
		//your form name fields must match the ones of the table fields
		$flight = flight::find([$id]);
		$flight->update_attributes(Post::getAll());

		if($flight->is_valid()){
		    $flight->save();
		    Redirect::toRoute('flight/index');
		} else {
		    //redirect to form with data and errors
		    Redirect::flashToRoute('flight/edit', ['flight' => $flight]);
		}
	}


	/**
	 * deletes the record where PK = $id
	 */
	public function destroy($id)
	{
		$flight = flight::find([$id]);
		$flight->delete();
		Redirect::toRoute('flight/index');
	}

	public function search(){

		return View::make('project/voos');
	}

	public function gestao(){

		$flights = flight::all();
		$airplanes = airplane::all();
		$airports = airport::all();
	return View::make('project.gestaovoos', ['flights' => $flights, 'airplanes' => $airplanes,'airports' => $airports]);

	}
}

?>